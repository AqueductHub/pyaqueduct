{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Aqueduct is a versatile experiment management system designed to streamline and simplify quantum system administration. Automation, data management and a multi-user platform come together to facilitate demanding experimental activities, through an intuitive, consistent, open interface. With robust security features including role-based access control and authentication, Aqueduct ensures data integrity and accessibility throughout the experiment pipeline.</p> <p>Aqueduct is an extensible platform, with a full API allowing connectivity with external systems, and a plugin SDK allowing extensions to expand core Aqueduct functionality in a flexible and secure way. This first version of Aqueduct contains data management tools that augment a lab\u2019s existing data storage systems by tracking critical settings, raw data and processed data from experiments, keeping them organised and readily accessible. Through convenient features such as tagging, favouriting, archiving, and annotation of experimental data, we facilitate a smoother data workflow for all labs. Aqueduct\u2019s software APIs make it possible to retrofit existing experiment scripts so that all the lab\u2019s data, not just the data produced by Deltaflow.Control, can be saved and accessed in a single, centralized location.</p> <p>This functionality is faciliated through 2 components: <code>aqueductcore</code> is  the server software that hosts the main application, web interface, and handles data storage. <code>pyaqueduct</code> is our python client which allows easy creation of experiments and upload of data and metadata for them.</p>"},{"location":"api-reference/","title":"Python API Reference","text":"<p>             Bases: <code>BaseModel</code></p> <p>Experiment model.</p>"},{"location":"api-reference/#pyaqueduct.API","title":"<code>pyaqueduct.API</code>","text":"<p>Aqueduct API interface to interact with experiments.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>URL of the Aqueduct server including the prefix.</p> required <code>timeout</code> <code>float</code> <p>Timeout of operations in seconds.</p> <code>0.5</code>"},{"location":"api-reference/#pyaqueduct.API.create_experiment","title":"<code>create_experiment(title=Field(..., min_length=1, max_length=_MAX_TITLE_LENGTH), description=Field('', max_length=_MAX_DESCRIPTION_LENGTH))</code>","text":"<p>Create an experiment with specific title and description.</p> <p>Parameters:</p> Name Type Description Default <code>title</code> <code>str</code> <p>Title of the experiment.</p> <code>Field(..., min_length=1, max_length=_MAX_TITLE_LENGTH)</code> <code>description</code> <code>str</code> <p>Description of the experiment.</p> <code>Field('', max_length=_MAX_DESCRIPTION_LENGTH)</code> <p>Returns:</p> Type Description <code>Experiment</code> <p>Experiment object to interact with its data.</p>"},{"location":"api-reference/#pyaqueduct.API.find_experiments","title":"<code>find_experiments(search=None, limit=10, offset=0, tags=None, start_datetime=None, end_datetime=None)</code>","text":"<p>Find the experiments that have the search criteria provided in arguments.</p> <p>Parameters:</p> Name Type Description Default <code>search</code> <code>Optional[str]</code> <p>The string to search for in the title field of experiments.</p> <code>None</code> <code>limit</code> <code>PositiveInt</code> <p>The maximum number of experiments to fetch in a single request.</p> <code>10</code> <code>offset</code> <code>NonNegativeInt</code> <p>The number of experiments to skip from the beginning of the search results.</p> <code>0</code> <code>tags</code> <code>Optional[List[str]]</code> <p>List of tags to filter the experiments by.</p> <code>None</code> <code>start_datetime</code> <code>Optional[datetime]</code> <p>Start datetime to filter the experiments after this date and time.</p> <code>None</code> <code>end_datetime</code> <code>Optional[datetime]</code> <p>End datetime to filter the experiments before this date and time.</p> <code>None</code> <p>Returns:</p> Type Description <code>List[Experiment]</code> <p>List of experiment objects to operate on their data.</p>"},{"location":"api-reference/#pyaqueduct.API.get_experiment","title":"<code>get_experiment(alias)</code>","text":"<p>Get the experiment by the specified identifier to operate on.</p> <p>Parameters:</p> Name Type Description Default <code>alias</code> <code>str</code> <p>Alias of the specified experiment.</p> required <p>Returns:</p> Type Description <code>Experiment</code> <p>Experiment object to interact with the experiment data.</p>"},{"location":"api-reference/#pyaqueduct.API.remove_experiment_by_alias","title":"<code>remove_experiment_by_alias(alias)</code>","text":"<p>Remove experiment from the database. Experiment's files will be also removed.</p> <p>Parameters:</p> Name Type Description Default <code>alias</code> <code>str</code> <p>Alias of the specified experiment.</p> required"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.alias","title":"<code>alias: str</code>  <code>instance-attribute</code>","text":"<p>Alias of the experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.created_at","title":"<code>created_at: datetime</code>  <code>instance-attribute</code>","text":"<p>Creation datetime of the experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.description","title":"<code>description: str</code>  <code>property</code> <code>writable</code>","text":"<p>Get description of experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.files","title":"<code>files: List[Tuple[str, datetime]]</code>  <code>property</code>","text":"<p>Get file names of expriment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.id","title":"<code>id: UUID</code>  <code>instance-attribute</code>","text":"<p>Unique ID of the experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.tags","title":"<code>tags: List[str]</code>  <code>property</code>","text":"<p>Gets tags of experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.title","title":"<code>title: str</code>  <code>property</code> <code>writable</code>","text":"<p>Get title of experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.updated_at","title":"<code>updated_at: datetime</code>  <code>property</code>","text":"<p>Get last updated datetime of the experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.add_tag","title":"<code>add_tag(tag=Field(..., max_length=_MAX_TAG_LENGTH))</code>","text":"<p>Add new tag to experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.download_file","title":"<code>download_file(file_name, destination_dir)</code>","text":"<p>Download the specified file of experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.remove_tag","title":"<code>remove_tag(tag=Field(..., max_length=_MAX_TAG_LENGTH))</code>","text":"<p>Remove tag from experiment.</p>"},{"location":"api-reference/#pyaqueduct.experiment.Experiment.upload_file","title":"<code>upload_file(file)</code>","text":"<p>Upload the specified file to experiment.</p>"}]}